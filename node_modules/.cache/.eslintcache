[{"/Users/niharikavikram/Desktop/TODO/todo-app/src/index.js":"1","/Users/niharikavikram/Desktop/TODO/todo-app/src/App.js":"2","/Users/niharikavikram/Desktop/TODO/todo-app/src/reportWebVitals.js":"3","/Users/niharikavikram/Desktop/TODO/todo-app/src/ToDoList.js":"4","/Users/niharikavikram/Desktop/TODO/todo-app/src/ToDoItem.js":"5","/Users/niharikavikram/Desktop/TODO/todo-app/src/Snackbar.js":"6","/Users/niharikavikram/Desktop/TODO/todo-app/src/Login.js":"7","/Users/niharikavikram/Desktop/TODO/todo-app/src/SignUp.js":"8"},{"size":535,"mtime":1700100796877,"results":"9","hashOfConfig":"10"},{"size":3651,"mtime":1702574028339,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1700100796877,"results":"12","hashOfConfig":"10"},{"size":500,"mtime":1700519117080,"results":"13","hashOfConfig":"10"},{"size":559,"mtime":1700519199121,"results":"14","hashOfConfig":"10"},{"size":396,"mtime":1700518067177,"results":"15","hashOfConfig":"10"},{"size":1084,"mtime":1702594276950,"results":"16","hashOfConfig":"10"},{"size":1565,"mtime":1702596554980,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"18sqbj1",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/niharikavikram/Desktop/TODO/todo-app/src/index.js",[],[],["44","45","46","47","48","49"],"/Users/niharikavikram/Desktop/TODO/todo-app/src/App.js",["50","51","52"],[],"// App.js - Main container for the application\nimport React, { useState } from 'react';\nimport ToDoList from './ToDoList';\nimport Snackbar from './Snackbar';\nimport './ToDoItem.css';\nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendar } from '@fortawesome/free-solid-svg-icons';\nimport SignUp from './SignUp'; // Import SignUp component\nimport Login from './Login'; // Import Login component\n// App.js - Import FontAwesome components and icons\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faCalendar } from '@fortawesome/free-solid-svg-icons';\n\n\nconst App = () => {\n  const [toDos, setToDos] = useState([]);\n  const [newToDoText, setNewToDoText] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [showSnackbar, setShowSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false); // Add authentication state\n\n  const handleSignUp = () => {\n    // Implement your signup logic here\n    // Set loggedIn to true when signup is successful\n    setLoggedIn(true);\n  };\n\n  const handleLogin = () => {\n    // Implement your login logic here\n    // Set loggedIn to true when login is successful\n    setLoggedIn(true);\n  };\n\n  const handleLogout = () => {\n    // Implement logout logic here\n    // Set loggedIn to false when the user logs out\n    setLoggedIn(false);\n  };\n\n  // Render the appropriate component based on authentication state\n  if (!loggedIn) {\n    return (\n      <div className=\"app\">\n        <SignUp onSignUp={handleSignUp} />\n        <Login onLogin={handleLogin} />\n      </div>\n    );\n  }\n\n  const addToDo = () => {\n    if (newToDoText.trim() !== '') {\n      const newToDo = {\n        id: Date.now(),\n        text: newToDoText,\n        completed: false,\n        dueDate: dueDate,\n      };\n\n      const newToDos = [...toDos, newToDo];\n      setToDos(newToDos);\n      setNewToDoText('');\n      setDueDate('');\n      showSnackbarMessage('Item added successfully');\n    } else {\n      showSnackbarMessage('Please enter a valid ToDo item');\n    }\n  };\n\n  const toggleToDo = (id) => {\n    const newToDos = toDos.map((item) => {\n      if (item.id === id) {\n        return { ...item, completed: !item.completed };\n      }\n      return item;\n    });\n    setToDos(newToDos);\n    showSnackbarMessage('Item updated successfully');\n  };\n\n  const deleteToDo = (id) => {\n    const newToDos = toDos.filter((item) => item.id !== id);\n    setToDos(newToDos);\n    showSnackbarMessage('Item deleted successfully');\n  };\n\n  const showSnackbarMessage = (message) => {\n    setSnackbarMessage(message);\n    setShowSnackbar(true);\n  };\n\n  const closeSnackbar = () => {\n    setShowSnackbar(false);\n    setSnackbarMessage('');\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"add-todo-container\">\n        <div className=\"input-container\">\n          <input\n            className=\"input-field\"\n            type=\"text\"\n            placeholder=\"Enter to-do item\"\n            value={newToDoText}\n            onChange={(e) => setNewToDoText(e.target.value)}\n          />\n        </div>\n        <input\n          className=\"due-date-field\"\n          type=\"date\"\n          value={dueDate}\n          onChange={(e) => setDueDate(e.target.value)}\n        />\n        <button className=\"add-button\" onClick={addToDo}>\n          Add To-Do\n        </button>\n      </div>\n\n      <ToDoList items={toDos} toggleToDo={toggleToDo} deleteToDo={deleteToDo} />\n      {showSnackbar && <Snackbar message={snackbarMessage} onClose={closeSnackbar} />}\n    </div>\n  );\n};\n\nexport default App;\n","/Users/niharikavikram/Desktop/TODO/todo-app/src/reportWebVitals.js",[],[],"/Users/niharikavikram/Desktop/TODO/todo-app/src/ToDoList.js",[],[],"/Users/niharikavikram/Desktop/TODO/todo-app/src/ToDoItem.js",[],[],"/Users/niharikavikram/Desktop/TODO/todo-app/src/Snackbar.js",[],[],"/Users/niharikavikram/Desktop/TODO/todo-app/src/Login.js",["53"],[],"/Users/niharikavikram/Desktop/TODO/todo-app/src/SignUp.js",[],[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":7,"column":10,"nodeType":"68","messageId":"69","endLine":7,"endColumn":25},{"ruleId":"66","severity":1,"message":"70","line":8,"column":10,"nodeType":"68","messageId":"69","endLine":8,"endColumn":20},{"ruleId":"66","severity":1,"message":"71","line":36,"column":9,"nodeType":"68","messageId":"69","endLine":36,"endColumn":21},{"ruleId":"66","severity":1,"message":"72","line":17,"column":11,"nodeType":"68","messageId":"69","endLine":17,"endColumn":15},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["73"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'FontAwesomeIcon' is defined but never used.","Identifier","unusedVar","'faCalendar' is defined but never used.","'handleLogout' is assigned a value but never used.","'data' is assigned a value but never used.","no-object-constructor"]