{"ast":null,"code":"var _jsxFileName = \"/Users/niharikavikram/Desktop/TODO/todo-app/src/App.js\",\n  _s = $RefreshSig$();\n// App.js - Main container for the application\nimport React, { useState } from 'react';\nimport ToDoList from './ToDoList';\nimport Snackbar from './Snackbar';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [toDos, setToDos] = useState([]);\n  const [newToDoText, setNewToDoText] = useState('');\n  const [showSnackbar, setShowSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const addToDo = () => {\n    if (newToDoText.trim() !== '') {\n      const newToDos = [...toDos, {\n        text: newToDoText,\n        completed: false\n      }];\n      setToDos(newToDos);\n      setNewToDoText('');\n      showSnackbarMessage('Item added successfully');\n    }\n  };\n  const toggleToDo = index => {\n    const newToDos = toDos.map((item, i) => {\n      if (i === index) {\n        return {\n          ...item,\n          completed: !item.completed\n        };\n      }\n      return item;\n    });\n    setToDos(newToDos);\n    showSnackbarMessage('Item updated successfully');\n  };\n  const deleteToDo = index => {\n    const newToDos = toDos.filter((_, i) => i !== index);\n    setToDos(newToDos);\n    showSnackbarMessage('Item deleted successfully');\n  };\n  const showSnackbarMessage = message => {\n    setSnackbarMessage(message);\n    setShowSnackbar(true);\n  };\n  const closeSnackbar = () => {\n    setShowSnackbar(false);\n    setSnackbarMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-todo-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-field\",\n        type: \"text\",\n        placeholder: \"Enter to-do item\",\n        value: newToDoText,\n        onChange: e => setNewToDoText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: addToDo,\n        children: \"Add To-Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n      items: toDos,\n      toggleToDo: toggleToDo,\n      deleteToDo: deleteToDo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"qmHgYb8UOvxqAgzNUTH+ASQ4c6c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ToDoList","Snackbar","jsxDEV","_jsxDEV","App","_s","toDos","setToDos","newToDoText","setNewToDoText","showSnackbar","setShowSnackbar","snackbarMessage","setSnackbarMessage","addToDo","trim","newToDos","text","completed","showSnackbarMessage","toggleToDo","index","map","item","i","deleteToDo","filter","_","message","closeSnackbar","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","items","_c","$RefreshReg$"],"sources":["/Users/niharikavikram/Desktop/TODO/todo-app/src/App.js"],"sourcesContent":["// App.js - Main container for the application\nimport React, { useState } from 'react';\nimport ToDoList from './ToDoList';\nimport Snackbar from './Snackbar';\nimport './App.css';\n\nconst App = () => {\n  const [toDos, setToDos] = useState([]);\n  const [newToDoText, setNewToDoText] = useState('');\n  const [showSnackbar, setShowSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n\n  const addToDo = () => {\n    if (newToDoText.trim() !== '') {\n      const newToDos = [...toDos, { text: newToDoText, completed: false }];\n      setToDos(newToDos);\n      setNewToDoText('');\n      showSnackbarMessage('Item added successfully');\n    }\n  };\n\n  const toggleToDo = (index) => {\n    const newToDos = toDos.map((item, i) => {\n      if (i === index) {\n        return { ...item, completed: !item.completed };\n      }\n      return item;\n    });\n    setToDos(newToDos);\n    showSnackbarMessage('Item updated successfully');\n  };\n\n  const deleteToDo = (index) => {\n    const newToDos = toDos.filter((_, i) => i !== index);\n    setToDos(newToDos);\n    showSnackbarMessage('Item deleted successfully');\n  };\n\n  const showSnackbarMessage = (message) => {\n    setSnackbarMessage(message);\n    setShowSnackbar(true);\n  };\n\n  const closeSnackbar = () => {\n    setShowSnackbar(false);\n    setSnackbarMessage('');\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"add-todo-container\">\n        <input\n          className=\"input-field\"\n          type=\"text\"\n          placeholder=\"Enter to-do item\"\n          value={newToDoText}\n          onChange={(e) => setNewToDoText(e.target.value)}\n        />\n        <button className=\"add-button\" onClick={addToDo}>\n          Add To-Do\n        </button>\n      </div>\n\n      {/* Move ToDoList component here */}\n      <ToDoList items={toDos} toggleToDo={toggleToDo} deleteToDo={deleteToDo} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}