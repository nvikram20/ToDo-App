{"ast":null,"code":"var _jsxFileName = \"/Users/niharikavikram/Desktop/TODO/todo-app/src/App.js\",\n  _s = $RefreshSig$();\n// App.js - Main container for the application\nimport React, { useState } from 'react';\nimport ToDoList from './ToDoList';\nimport Snackbar from './Snackbar';\nimport './ToDoItem.css';\nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendar } from '@fortawesome/free-solid-svg-icons';\nimport SignUp from './SignUp'; // Import SignUp component\nimport Login from './Login'; // Import Login component\n// App.js - Import FontAwesome components and icons\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faCalendar } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [toDos, setToDos] = useState([]);\n  const [newToDoText, setNewToDoText] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [showSnackbar, setShowSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false); // Add authentication state\n\n  const handleSignUp = () => {\n    // Implement your signup logic here\n    // Set loggedIn to true when signup is successful\n    setLoggedIn(true);\n  };\n  const handleLogin = () => {\n    // Implement your login logic here\n    // Set loggedIn to true when login is successful\n    setLoggedIn(true);\n  };\n  const handleLogout = () => {\n    // Implement logout logic here\n    // Set loggedIn to false when the user logs out\n    setLoggedIn(false);\n  };\n\n  // Render the appropriate component based on authentication state\n  if (!loggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(SignUp, {\n        onSignUp: handleSignUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n  const addToDo = () => {\n    if (newToDoText.trim() !== '') {\n      const newToDo = {\n        id: Date.now(),\n        text: newToDoText,\n        completed: false,\n        dueDate: dueDate\n      };\n      const newToDos = [...toDos, newToDo];\n      setToDos(newToDos);\n      setNewToDoText('');\n      setDueDate('');\n      showSnackbarMessage('Item added successfully');\n    } else {\n      showSnackbarMessage('Please enter a valid ToDo item');\n    }\n  };\n  const toggleToDo = id => {\n    const newToDos = toDos.map(item => {\n      if (item.id === id) {\n        return {\n          ...item,\n          completed: !item.completed\n        };\n      }\n      return item;\n    });\n    setToDos(newToDos);\n    showSnackbarMessage('Item updated successfully');\n  };\n  const deleteToDo = id => {\n    const newToDos = toDos.filter(item => item.id !== id);\n    setToDos(newToDos);\n    showSnackbarMessage('Item deleted successfully');\n  };\n  const showSnackbarMessage = message => {\n    setSnackbarMessage(message);\n    setShowSnackbar(true);\n  };\n  const closeSnackbar = () => {\n    setShowSnackbar(false);\n    setSnackbarMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-todo-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-field\",\n          type: \"text\",\n          placeholder: \"Enter to-do item\",\n          value: newToDoText,\n          onChange: e => setNewToDoText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"due-date-field\",\n        type: \"date\",\n        value: dueDate,\n        onChange: e => setDueDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: addToDo,\n        children: \"Add To-Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n      items: toDos,\n      toggleToDo: toggleToDo,\n      deleteToDo: deleteToDo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), showSnackbar && /*#__PURE__*/_jsxDEV(Snackbar, {\n      message: snackbarMessage,\n      onClose: closeSnackbar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"EJisFJ6h6IGjYpeg1dZV1e934vY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ToDoList","Snackbar","FontAwesomeIcon","faCalendar","SignUp","Login","jsxDEV","_jsxDEV","App","_s","toDos","setToDos","newToDoText","setNewToDoText","dueDate","setDueDate","showSnackbar","setShowSnackbar","snackbarMessage","setSnackbarMessage","loggedIn","setLoggedIn","handleSignUp","handleLogin","handleLogout","className","children","onSignUp","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","addToDo","trim","newToDo","id","Date","now","text","completed","newToDos","showSnackbarMessage","toggleToDo","map","item","deleteToDo","filter","message","closeSnackbar","type","placeholder","value","onChange","e","target","onClick","items","onClose","_c","$RefreshReg$"],"sources":["/Users/niharikavikram/Desktop/TODO/todo-app/src/App.js"],"sourcesContent":["// App.js - Main container for the application\nimport React, { useState } from 'react';\nimport ToDoList from './ToDoList';\nimport Snackbar from './Snackbar';\nimport './ToDoItem.css';\nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendar } from '@fortawesome/free-solid-svg-icons';\nimport SignUp from './SignUp'; // Import SignUp component\nimport Login from './Login'; // Import Login component\n// App.js - Import FontAwesome components and icons\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faCalendar } from '@fortawesome/free-solid-svg-icons';\n\n\nconst App = () => {\n  const [toDos, setToDos] = useState([]);\n  const [newToDoText, setNewToDoText] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [showSnackbar, setShowSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false); // Add authentication state\n\n  const handleSignUp = () => {\n    // Implement your signup logic here\n    // Set loggedIn to true when signup is successful\n    setLoggedIn(true);\n  };\n\n  const handleLogin = () => {\n    // Implement your login logic here\n    // Set loggedIn to true when login is successful\n    setLoggedIn(true);\n  };\n\n  const handleLogout = () => {\n    // Implement logout logic here\n    // Set loggedIn to false when the user logs out\n    setLoggedIn(false);\n  };\n\n  // Render the appropriate component based on authentication state\n  if (!loggedIn) {\n    return (\n      <div className=\"app\">\n        <SignUp onSignUp={handleSignUp} />\n        <Login onLogin={handleLogin} />\n      </div>\n    );\n  }\n\n  const addToDo = () => {\n    if (newToDoText.trim() !== '') {\n      const newToDo = {\n        id: Date.now(),\n        text: newToDoText,\n        completed: false,\n        dueDate: dueDate,\n      };\n\n      const newToDos = [...toDos, newToDo];\n      setToDos(newToDos);\n      setNewToDoText('');\n      setDueDate('');\n      showSnackbarMessage('Item added successfully');\n    } else {\n      showSnackbarMessage('Please enter a valid ToDo item');\n    }\n  };\n\n  const toggleToDo = (id) => {\n    const newToDos = toDos.map((item) => {\n      if (item.id === id) {\n        return { ...item, completed: !item.completed };\n      }\n      return item;\n    });\n    setToDos(newToDos);\n    showSnackbarMessage('Item updated successfully');\n  };\n\n  const deleteToDo = (id) => {\n    const newToDos = toDos.filter((item) => item.id !== id);\n    setToDos(newToDos);\n    showSnackbarMessage('Item deleted successfully');\n  };\n\n  const showSnackbarMessage = (message) => {\n    setSnackbarMessage(message);\n    setShowSnackbar(true);\n  };\n\n  const closeSnackbar = () => {\n    setShowSnackbar(false);\n    setSnackbarMessage('');\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"add-todo-container\">\n        <div className=\"input-container\">\n          <input\n            className=\"input-field\"\n            type=\"text\"\n            placeholder=\"Enter to-do item\"\n            value={newToDoText}\n            onChange={(e) => setNewToDoText(e.target.value)}\n          />\n        </div>\n        <input\n          className=\"due-date-field\"\n          type=\"date\"\n          value={dueDate}\n          onChange={(e) => setDueDate(e.target.value)}\n        />\n        <button className=\"add-button\" onClick={addToDo}>\n          Add To-Do\n        </button>\n      </div>\n\n      <ToDoList items={toDos} toggleToDo={toggleToDo} deleteToDo={deleteToDo} />\n      {showSnackbar && <Snackbar message={snackbarMessage} onClose={closeSnackbar} />}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}